// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VenteMobile.Data;

namespace VenteMobile.Migrations
{
    [DbContext(typeof(VenteMobileContext))]
    [Migration("20200411152806_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("VenteMobile.Models.Critique", b =>
                {
                    b.Property<int>("CritiqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CritiqueEtoiles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CritiqueNom")
                        .HasColumnType("TEXT");

                    b.Property<string>("CritiqueText")
                        .HasColumnType("TEXT");

                    b.Property<int>("TelephoneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CritiqueId");

                    b.HasIndex("TelephoneId");

                    b.ToTable("Critique");
                });

            modelBuilder.Entity("VenteMobile.Models.Manufacturier", b =>
                {
                    b.Property<int>("ManufacturierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ManufacturierMarque")
                        .HasColumnType("TEXT");

                    b.Property<string>("ManufacturierOrigine")
                        .HasColumnType("TEXT");

                    b.Property<string>("ManufacturierSiteWeb")
                        .HasColumnType("TEXT");

                    b.HasKey("ManufacturierId");

                    b.ToTable("Manufacturier");
                });

            modelBuilder.Entity("VenteMobile.Models.Telephone", b =>
                {
                    b.Property<int>("TelephoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManufacturierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TelephoneCouleur")
                        .HasColumnType("TEXT");

                    b.Property<int>("TelephoneCout")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TelephoneModel")
                        .HasColumnType("TEXT");

                    b.HasKey("TelephoneId");

                    b.HasIndex("ManufacturierId");

                    b.ToTable("Telephone");
                });

            modelBuilder.Entity("VenteMobile.Models.TelephoneVendeur", b =>
                {
                    b.Property<int>("TelephoneId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VendeurId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TelephoneId", "VendeurId");

                    b.HasIndex("VendeurId");

                    b.ToTable("TelephoneVendeur");
                });

            modelBuilder.Entity("VenteMobile.Models.Vendeur", b =>
                {
                    b.Property<int>("VendeurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("VendeurAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("VendeurNoTel")
                        .HasColumnType("TEXT");

                    b.Property<string>("VendeurNom")
                        .HasColumnType("TEXT");

                    b.HasKey("VendeurId");

                    b.ToTable("Vendeur");
                });

            modelBuilder.Entity("VenteMobile.Models.VendeurManufacturier", b =>
                {
                    b.Property<int>("ManufacturierId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VendeurId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ManufacturierId", "VendeurId");

                    b.HasIndex("VendeurId");

                    b.ToTable("VendeurManufacturier");
                });

            modelBuilder.Entity("VenteMobile.Models.Critique", b =>
                {
                    b.HasOne("VenteMobile.Models.Telephone", "Telephone")
                        .WithMany("Critiques")
                        .HasForeignKey("TelephoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VenteMobile.Models.Telephone", b =>
                {
                    b.HasOne("VenteMobile.Models.Manufacturier", "Manufacturier")
                        .WithMany("Telephones")
                        .HasForeignKey("ManufacturierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VenteMobile.Models.TelephoneVendeur", b =>
                {
                    b.HasOne("VenteMobile.Models.Telephone", "Telephone")
                        .WithMany("TelephonesVendeurs")
                        .HasForeignKey("TelephoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VenteMobile.Models.Vendeur", "Vendeur")
                        .WithMany("TelephonesVendeurs")
                        .HasForeignKey("VendeurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VenteMobile.Models.VendeurManufacturier", b =>
                {
                    b.HasOne("VenteMobile.Models.Manufacturier", "Manufacturier")
                        .WithMany("VendeursManufacturiers")
                        .HasForeignKey("ManufacturierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VenteMobile.Models.Vendeur", "Vendeur")
                        .WithMany("VendeursManufacturiers")
                        .HasForeignKey("VendeurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
